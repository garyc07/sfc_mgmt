org: mlggc
app: sfc-mgmt
service: sfc-mgmt
frameworkVersion: '3'

plugins:
  - serverless-dynamodb-local
  - serverless-offline


custom:
  playersTable: 'SFC_MGMT_Players_Table'
  dynamodb: 
    stages: 
      - dev 
      - test
    start:
      port: 8000
      inMemory: true
      migrate: true
      #seed: true



provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: eu-west-1
  endpointType: regional
  memorySize: 512
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ PlayersTable, Arn ]
  environment:
    PLAYERS_TABLE: ${self:custom.playersTable}

functions:
  api:
    handler: server.handler
    events:
      - httpApi: '*'




resources:
  Resources:
    PlayersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.playersTable}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: playerId
            AttributeType: S
        KeySchema:
          - AttributeName: playerId
            KeyType: HASH



package:
  exclude:
    - node_modules/dynamodb-localhost/**
    - node_modules/serverless-dynamodb-local/**
    - node_modules/serverless-offline/**
